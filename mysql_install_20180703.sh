#!/bin/bash
dq=`cd "$(dirname $0)";pwd`
mysql_check=`rpm -qa|grep -i "mysql-libs"`
libaio_check=`rpm -qa|grep "^libaio"|awk -F "-" '{print$1}'`

if [[ $libaio_check != "libaio" ]]
then
	echo "please install libaio"
	exit 100
fi

rpm -e --nodeps $mysql_check

group_check=`cat /etc/group|grep mysql |awk -F ":" '{print$1}'`
user_check=`cat /etc/passwd|grep mysql|awk -F ":" '{print$1}'`
if [[ $group_check != mysql ]]
then
        echo "group mysql is not exist,so create it now..."
        groupadd mysql
        echo "group mysql is create finish"
fi

if [[ $user_check != mysql ]]
then
        echo "user mysql is not exist,so create it now..."
        useradd -g mysql mysql
        echo 'mysql' | passwd --stdin mysql
        echo "user mysql is create finish"
fi

echo "envir is ok"


mysql_install(){
if [ -d /data ]
then
	echo "dir /data is already exist"
else
	mkdir /data
	echo "create dir /data"
fi


rm -rf $dq/mysql-5.7.9-linux-glibc2.5-x86_64
tar -xf $dq/mysql-5.7.9-linux-glibc2.5-x86_64.tar.gz -C $dq

mv $dq/mysql-5.7.9-linux-glibc2.5-x86_64 /data/mysql

ln -sv /data/mysql /usr/local/mysql

if [ -d /data/mysql/data ]
then
	echo "dir /data/mysql/data is already exist"
else
	mkdir -pv /data/mysql/data
	echo "dir /data/mysql/data is ok"
fi

if [ -d /data/mysql/log/iblog ]
then
	echo "dir /data/mysql/log/iblog is already exist"
else
	mkdir -pv /data/mysql/log/iblog
	echo "dir /data/mysql/log/iblog is ok"
fi

if [ -d /data/mysql/log/binlog ]
then
	echo "dir /data/mysql/log/binlog is already exist"
else
	mkdir -pv /data/mysql/log/binlog
	echo "dir /data/mysql/log/binlog is ok"
fi

if [ -d /data/mysql/log/relaylog ]
then
	echo "dir /data/mysql/log/relaylog is already exist"
else
	mkdir -pv /data/mysql/log/relaylog
	echo "dir /data/mysql/log/relaylog is ok"
fi

if [ -d /data/mysql/run ]
then
	echo "dir /data/mysql/run is already exist"
else
	mkdir -pv /data/mysql/run
	echo "dir /data/mysql/run is ok"
fi

if [ -d /data/mysql/tmp ]
then
	echo "dir /data/mysql/tmp is already exist"
else
	mkdir -pv /data/mysql/tmp
	echo "dir /data/mysql/tmp is ok"
fi

chown -R mysql:mysql /data/mysql
chmod -R 755 /data/mysql

}

mysql_config(){
read -p "Do you want to initialize the config file?(yes or no):"  mysql_con

if [[ $mysql_con == yes ]]
then
	echo "start initialize config"
else
	exit 100
fi

cat > /etc/my.cnf << EOF-mycnf
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It's a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.

#[mysqld]

# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

# These are commonly set, remove the # and set as required.
# basedir = .....
# datadir = .....
# port = .....
# server_id = .....
# socket = .....

# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M

[mysql]

# CLIENT #
port = 3306
socket = /data/mysql/run/mysql.sock
disable-auto-rehash
default-character-set=utf8

[mysqld]

# GENERAL #
lower_case_table_names=1
server_id = 128
port = 3306
user = mysql
explicit_defaults_for_timestamp=true

default-storage-engine = InnoDB
character_set_server = utf8
auto_increment_increment = 2
auto_increment_offset = 1
lower_case_table_names = 1
socket = /data/mysql/run/mysql.sock
pid_file = /data/mysql/run/mysqld.pid

# MyISAM #
key-buffer-size                = 32M
myisam-recover-options         = FORCE,BACKUP

# SAFETY #
max_allowed_packet = 134217728
max_connections = 8192
max_user_connections = 8000
open_files_limit = 65535
skip-name-resolve
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
sysdate-is-now                 = 1

# DATA STORAGE #
basedir = /data/mysql
datadir = /data/mysql/data/
tmpdir = /data/mysql/tmp

# BINARY LOGGING #
log-bin = /data/mysql/log/binlog/master-bin
log-bin-index = /data/mysql/log/binlog/master-bin.index
expire-logs-days = 15
sync-binlog = 1
binlog_format = ROW

#RELAY LOGGING
relay-log=/data/mysql/log/relaylog/master-relay-bin
relay-log-index=/data/mysql/log/relaylog/master-relay-bin.index
sync_relay_log=1

# CACHES AND LIMITS #
tmp-table-size                 = 32M
max-heap-table-size            = 32M
query-cache-type               = 0
query-cache-size               = 0
max-connections                = 500
thread-cache-size              = 50
open-files-limit               = 65535
table-definition-cache         = 1024
table-open-cache               = 2048

# INNODB #
innodb_log_group_home_dir = /data/mysql/log/iblog
innodb_data_home_dir = /data/mysql/log/iblog
innodb-flush-method = O_DIRECT
innodb-log-files-in-group      = 2
innodb-log-file-size           = 256M
innodb-flush-log-at-trx-commit = 1
innodb-file-per-table          = 1
innodb-buffer-pool-size        = 6G

# LOGGING #
general_log = off
log-error                      = /data/mysql/log/mysql-error.log
log-queries-not-using-indexes  = 1
slow-query-log                 = 1
slow-query-log-file            = /data/mysql/log/mysql-slow.log
log_slave_updates=ON
EOF-mycnf

cd /data/mysql/bin && ./mysqld  --defaults-extra-file=/etc/my.cnf --basedir=/data/mysql --datadir=/data/mysql/data --user=mysql --initialize-insecure

read -p "Do you want to add envir?(yes or no):" mysql_envir
if [[ $mysql_envir == yes ]]
then
	echo "start to add envir"
else
	exit 100
fi

echo "PATH=/data/mysql/bin:\$PATH" >> /etc/profile
source /etc/profile

cp /data/mysql/support-files/mysql.server /etc/init.d/mysqld

sed -i "63s!mysqld_pid_file_path=!mysqld_pid_file_path=/data/mysql/run/mysqld.pid!" /etc/init.d/mysqld

}

mysql_add(){
cat<<EOF-mysql-add
use mysql
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.user WHERE host='localhost';
DELETE FROM mysql.user WHERE host='localhost.localdomain';
DELETE FROM mysql.user WHERE host='::1';
SELECT host, user, authentication_string FROM user WHERE user = 'root';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY 'password' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EOF-mysql-add

}
xwindows(){
cat<<EOF
#########################################################
#       Please input the number that you need           #
#       1.mysql_install                                 #
#       2.mysql_config                                  #
#       3.mysql_add                                     #
#	4.exit						#
#########################################################
EOF
stty erase '^H'
read -p "you choose:" choose


case $choose in
1)
        mysql_install
        xwindows
        ;;
2)
	mysql_config
	xwindows
	;;
3)
	mysql_add
	xwindows
	;;
4)
	exit
	;;
esac
}

xwindows
